---
version: "3.3"
services:
  zoo1:
    image: bitnami/zookeeper:${ZOO_TAG}
    container_name: zkn1
    environment:
        ZOO_MY_ID: 1
        ZOO_SERVERS: server.1=0.0.0.0:2888:3888
        ALLOW_ANONYMOUS_LOGIN: "yes"

  sd1:
    build:
      context: dockerfiles/
      dockerfile: dockerfile-stardog
      args:
        - TAG=${STARDOG_TAG}
        - NODE_TYPE=node
        - SSH_USER=${SSH_USER}
        - SSH_PASS=${SSH_PASS}
    container_name: ${STARDOG_HOSTNAME_NODE_1}
    entrypoint: ["/bin/bash", "-c"]
    command: ["/var/start.sh"]
    depends_on:
      - zoo1

  sd2:
    build:
      context: dockerfiles/
      dockerfile: dockerfile-stardog
      args:
          - TAG=${STARDOG_TAG}
          - NODE_TYPE=node
          - SSH_USER=${SSH_USER}
          - SSH_PASS=${SSH_PASS}
    container_name: ${STARDOG_HOSTNAME_NODE_2}
    entrypoint: ["/bin/bash", "-c"]
    command: ["/var/start.sh"]
    depends_on:
      - zoo1

  sdstandby:
    build:
      context: dockerfiles/
      dockerfile: dockerfile-stardog
      args:
        - TAG=${STARDOG_TAG}
        - NODE_TYPE=standby
        - SSH_USER=${SSH_USER}
        - SSH_PASS=${SSH_PASS}
    container_name: ${STARDOG_HOSTNAME_STANDBY}
    entrypoint: ["/bin/bash", "-c"]
    command: ["/var/start-standby.sh"]
    depends_on:
      - zoo1

  sdcache1:
    build:
      context: dockerfiles/
      dockerfile: dockerfile-stardog
      args:
        - TAG=${STARDOG_TAG}
        - NODE_TYPE=cache
        - SSH_USER=${SSH_USER}
        - SSH_PASS=${SSH_PASS}
    # underscores not allowed for cache target hostnames
    entrypoint: ["/bin/bash", "-c"]
    command: ["/var/start.sh"]
    container_name: ${STARDOG_HOSTNAME_CACHE}
    depends_on:
      - zoo1

  sdlb:
    build:
      context: dockerfiles/
      dockerfile: dockerfile-haproxy
      args:
        - TAG=${HAPROXY_TAG}
    container_name: ${STARDOG_LB}
    ports:
      - "127.0.0.1:5820:5820"
    depends_on:
      - zoo1
      - sd1
      - sd2

  # two mysql servers are used instead of one so we can simulate multiple datasources.
  mysql-music:
    build:
      context: .
      dockerfile: dockerfiles/dockerfile-mysql-music
    # this value is hardcoded in conftest.py (music_options fixture), for multiple datasource / vg tests.
    # it's also hardcoded in test/test_admin.py for testing imports.
    container_name: pystardog_mysql_music

  mysql-videos:
    build:
      context: .
      dockerfile: dockerfiles/dockerfile-mysql-videos
    container_name: pystardog_mysql_videos
